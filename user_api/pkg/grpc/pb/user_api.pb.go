// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_api/pkg/grpc/pb/user_api.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetByUsernameRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByUsernameRequest) Reset()         { *m = GetByUsernameRequest{} }
func (m *GetByUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*GetByUsernameRequest) ProtoMessage()    {}
func (*GetByUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e35b8ee398d9e3a, []int{0}
}

func (m *GetByUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByUsernameRequest.Unmarshal(m, b)
}
func (m *GetByUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByUsernameRequest.Marshal(b, m, deterministic)
}
func (m *GetByUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByUsernameRequest.Merge(m, src)
}
func (m *GetByUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_GetByUsernameRequest.Size(m)
}
func (m *GetByUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByUsernameRequest proto.InternalMessageInfo

func (m *GetByUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GetByUsernameOutput struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByUsernameOutput) Reset()         { *m = GetByUsernameOutput{} }
func (m *GetByUsernameOutput) String() string { return proto.CompactTextString(m) }
func (*GetByUsernameOutput) ProtoMessage()    {}
func (*GetByUsernameOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e35b8ee398d9e3a, []int{1}
}

func (m *GetByUsernameOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByUsernameOutput.Unmarshal(m, b)
}
func (m *GetByUsernameOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByUsernameOutput.Marshal(b, m, deterministic)
}
func (m *GetByUsernameOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByUsernameOutput.Merge(m, src)
}
func (m *GetByUsernameOutput) XXX_Size() int {
	return xxx_messageInfo_GetByUsernameOutput.Size(m)
}
func (m *GetByUsernameOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByUsernameOutput.DiscardUnknown(m)
}

var xxx_messageInfo_GetByUsernameOutput proto.InternalMessageInfo

func (m *GetByUsernameOutput) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GetByUsernameReply struct {
	Data                 *GetByUsernameOutput `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Error                string               `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetByUsernameReply) Reset()         { *m = GetByUsernameReply{} }
func (m *GetByUsernameReply) String() string { return proto.CompactTextString(m) }
func (*GetByUsernameReply) ProtoMessage()    {}
func (*GetByUsernameReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e35b8ee398d9e3a, []int{2}
}

func (m *GetByUsernameReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByUsernameReply.Unmarshal(m, b)
}
func (m *GetByUsernameReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByUsernameReply.Marshal(b, m, deterministic)
}
func (m *GetByUsernameReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByUsernameReply.Merge(m, src)
}
func (m *GetByUsernameReply) XXX_Size() int {
	return xxx_messageInfo_GetByUsernameReply.Size(m)
}
func (m *GetByUsernameReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByUsernameReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetByUsernameReply proto.InternalMessageInfo

func (m *GetByUsernameReply) GetData() *GetByUsernameOutput {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetByUsernameReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*GetByUsernameRequest)(nil), "pb.GetByUsernameRequest")
	proto.RegisterType((*GetByUsernameOutput)(nil), "pb.GetByUsernameOutput")
	proto.RegisterType((*GetByUsernameReply)(nil), "pb.GetByUsernameReply")
}

func init() {
	proto.RegisterFile("user_api/pkg/grpc/pb/user_api.proto", fileDescriptor_9e35b8ee398d9e3a)
}

var fileDescriptor_9e35b8ee398d9e3a = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x2d, 0x4e, 0x2d,
	0x8a, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0xc8, 0x4e, 0xd7, 0x4f, 0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x48,
	0xd2, 0x87, 0x09, 0xea, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x31, 0x15, 0x24, 0x29, 0x19, 0x71,
	0x89, 0xb8, 0xa7, 0x96, 0x38, 0x55, 0x86, 0x16, 0xa7, 0x16, 0xe5, 0x25, 0xe6, 0xa6, 0x06, 0xa5,
	0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x49, 0x71, 0x71, 0xc0, 0x84, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0xe0, 0x7c, 0x25, 0x43, 0x2e, 0x61, 0x14, 0x3d, 0xfe, 0xa5, 0x25, 0x05, 0xa5, 0xf8,
	0xb5, 0x84, 0x73, 0x09, 0xa1, 0x59, 0x53, 0x90, 0x53, 0x29, 0xa4, 0xcd, 0xc5, 0xe2, 0x92, 0x58,
	0x92, 0x08, 0x56, 0xcd, 0x6d, 0x24, 0xae, 0x57, 0x90, 0xa4, 0x87, 0xc5, 0xe0, 0x20, 0xb0, 0x22,
	0x21, 0x11, 0x2e, 0x56, 0xd7, 0xa2, 0xa2, 0xfc, 0x22, 0x09, 0x26, 0xb0, 0xd9, 0x10, 0x8e, 0x91,
	0x0f, 0x17, 0x3b, 0x48, 0xb5, 0x63, 0x41, 0xa6, 0x90, 0x23, 0x17, 0x2f, 0x8a, 0x6e, 0x21, 0x09,
	0x0c, 0x03, 0xa1, 0xbe, 0x93, 0x12, 0xc3, 0x22, 0x53, 0x90, 0x53, 0x99, 0xc4, 0x06, 0x0e, 0x18,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x28, 0x98, 0x8a, 0x07, 0x3f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserApiClient is the client API for UserApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserApiClient interface {
	GetByUsername(ctx context.Context, in *GetByUsernameRequest, opts ...grpc.CallOption) (*GetByUsernameReply, error)
}

type userApiClient struct {
	cc *grpc.ClientConn
}

func NewUserApiClient(cc *grpc.ClientConn) UserApiClient {
	return &userApiClient{cc}
}

func (c *userApiClient) GetByUsername(ctx context.Context, in *GetByUsernameRequest, opts ...grpc.CallOption) (*GetByUsernameReply, error) {
	out := new(GetByUsernameReply)
	err := c.cc.Invoke(ctx, "/pb.UserApi/GetByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserApiServer is the server API for UserApi service.
type UserApiServer interface {
	GetByUsername(context.Context, *GetByUsernameRequest) (*GetByUsernameReply, error)
}

func RegisterUserApiServer(s *grpc.Server, srv UserApiServer) {
	s.RegisterService(&_UserApi_serviceDesc, srv)
}

func _UserApi_GetByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserApiServer).GetByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserApi/GetByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserApiServer).GetByUsername(ctx, req.(*GetByUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserApi",
	HandlerType: (*UserApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByUsername",
			Handler:    _UserApi_GetByUsername_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_api/pkg/grpc/pb/user_api.proto",
}
