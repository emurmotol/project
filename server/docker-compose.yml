version: "2"
services:
  postgres:
    restart: always
    volumes:
    - ./postgres/data:/var/lib/postgresql/data
    - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    image: postgres
    container_name: postgres
    ports:
    - 5433:5432
    environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=project
  adminer:
    restart: always
    image: adminer
    container_name: adminer
    depends_on:
    - postgres
    ports:
    - 8000:8080
  redis:
    restart: always
    volumes:
    - ./redis/data:/data
    image: redis
    container_name: redis
    ports:
    - 6380:6379
  gocryptotrader_web:
    container_name: gocryptotrader_web
    build: ${GOPATH}/src/github.com/thrasher-/gocryptotrader/web
    depends_on:
    - gocryptotrader_daemon
    ports:
    - 9051:80
  gocryptotrader_daemon:
    container_name: gocryptotrader_daemon
    build: ${GOPATH}/src/github.com/thrasher-/gocryptotrader
    ports:
    - 9050:9050
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    ports:
    - 9090:9090
    depends_on:
    - exporter
  exporter:
    image: prom/node-exporter
    container_name: exporter
    ports:
    - 9100:9100
    # network_mode: host
  grafana:
    image: grafana/grafana
    container_name: grafana
    # volumes:
    # - ./grafana/data:/var/lib/grafana
    ports:
    - 3000:3000
    depends_on:
    - prometheus